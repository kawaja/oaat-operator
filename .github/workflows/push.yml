name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint 
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python3 -m pytest tests/test_oaatgroup.py
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Validate Version
      run: |
        VER=$(grep oaat-operator version.txt | sed -e 's/.*=//' -e 's/\s//g')
        grep "ghcr.io/kawaja/oaat-operator:v${VER}" manifests/02-oaat-operator-deployment.yaml >/dev/null
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Build the Docker image (with :<sha> and :dev tags)
      run: |
        CR=ghcr.io/${{github.repository}}
        VER=$(grep oaat-operator version.txt | sed -e 's/.*=//' -e 's/\s//g')
        echo "__version__ = '${VER}'" >> oaatoperator/__init__.py
        echo "__gitsha__ = '${GITHUB_SHA::7}'" >> oaatoperator/__init__.py
        echo "__build_date__ = '$(date +%Y%m%d%H%M%S)'" >> oaatoperator/__init__.py
        docker build oaatoperator --file build/Dockerfile --tag ${CR}:${GITHUB_SHA::7}
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
        docker tag ${CR}:${GITHUB_SHA::7} ${CR}:dev
        docker push ${CR}:${GITHUB_SHA::7}
        docker push ${CR}:dev

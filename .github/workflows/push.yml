name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint 
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python3 -m pytest tests/test_utility.py
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Validate Version
      run: |
        VER=$(grep oaat-operator version.txt | sed -e 's/.*=//' -e 's/\s//g')
        grep "ghcr.io/kawaja/oaat-operator:v${VER}" manifests/02-oaat-operator-deployment.yaml >/dev/null
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Repo
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: $GITHUB_ACTOR
        password: ${{ secrets.CR_PAT }}
    - name: Get short Git SHA
      id: vars
      shell: bash
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Embed Data/Git SHA details
      run: |
        VER=$(grep oaat-operator version.txt | sed -e 's/.*=//' -e 's/\s//g')
        echo "__version__ = '${VER}'" >> oaatoperator/__init__.py
        echo "__gitsha__ = '${GITHUB_SHA::7}'" >> oaatoperator/__init__.py
        echo "__build_date__ = '$(date +%Y%m%d%H%M%S)'" >> oaatoperator/__init__.py
        ls -laR
    - name: Build the Docker image (with :<sha> and :dev tags)
      uses: docker/build-push-action@v2
      with:
        context: .
        file: build/Dockerfile
        push: true
        tags: ${{github.repository}}:${{ steps.vars.outputs.sha_short }},${{github.repository}}:dev
